/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import javax.swing.ButtonGroup;
import com.mycompany.indagamente.Avaliacao;
import com.mycompany.indagamente.Perguntas;
import com.mycompany.indagamente.Resposta;
import javax.swing.JOptionPane;
import java.sql.*;
import controll.Conexao;
import com.mycompany.indagamente.Usuario;

     

/**
 *
 * @author joao vitor antoniel
 */
public class telaPerguntas extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(telaPerguntas.class.getName());

    /**
     * Creates new form telaPerguntas
     */
    private Usuario professorLogado;

    public telaPerguntas(Usuario professorLogado) {
    this.professorLogado = professorLogado;
    initComponents();
}
    // Conexão com o banco (ajuste para o jeito que você abre conexão no seu projeto)
    private void adicionarPergunta() {
    // 1) Abre conexão com try-with-resources para fechar automaticamente
    try (Connection conn = Conexao.conectar()) {

        // 2) Validação do ID da avaliação
        String textoIdAval = jTextFieldIdAval.getText().trim();
        if (textoIdAval.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Informe o ID da avaliação.");
            return;
        }
        int idAval;
        try {
            idAval = Integer.parseInt(textoIdAval);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "ID da avaliação inválido. Use apenas números.");
            return;
        }
        if (!Avaliacao.existeIdAval(idAval)) {
            JOptionPane.showMessageDialog(this, "ID da avaliação não encontrado no banco.");
            return;
        }

        // 3) Validação do enunciado
        String enunciado = jTextArea1.getText().trim();
        if (enunciado.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Digite o enunciado da pergunta.");
            return;
        }

        // 4) Validação da alternativa correta
        String alternativaCorreta = "";
        if (jCheckBoxAlternativaA.isSelected()) alternativaCorreta = "A";
        else if (jCheckBoxAlternativaB.isSelected()) alternativaCorreta = "B";
        else if (jCheckBoxAlternativaC.isSelected()) alternativaCorreta = "C";
        else if (jCheckBoxAlternativaD.isSelected()) alternativaCorreta = "D";

        if (alternativaCorreta.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Selecione a alternativa correta.");
            return;
        }

        // 5) Inserção da pergunta (idResposta ficará NULL inicialmente)
        Perguntas pergunta = new Perguntas(idAval, enunciado);
        if (!pergunta.inserirPergunta(conn)) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar a pergunta.");
            return;
        }

        // 6) Inserção da resposta correta e captura do id gerado
        Resposta resp = new Resposta(pergunta.getIdPergunta(), alternativaCorreta);
        if (!resp.inserirResposta(conn)) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar a resposta.");
            return;
        }

        // 7) Atualiza a pergunta com o idResposta obtido
        pergunta.setIdResposta(resp.getIdResposta());
        if (!pergunta.atualizarIdResposta(conn)) {
            JOptionPane.showMessageDialog(this, "Pergunta salva, mas falha ao vincular resposta.");
            return;
        }

        // 8) Confirmação e limpeza de campos
        JOptionPane.showMessageDialog(this, "Pergunta e resposta salvas com sucesso!");
        jTextArea1.setText("");
        jCheckBoxAlternativaA.setSelected(false);
        jCheckBoxAlternativaB.setSelected(false);
        jCheckBoxAlternativaC.setSelected(false);
        jCheckBoxAlternativaD.setSelected(false);

    } catch (SQLException e) {
        // 9) Tratamento de erro geral de banco
        JOptionPane.showMessageDialog(this, "Erro no banco de dados: " + e.getMessage());
        e.printStackTrace();
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jCheckBoxAlternativaA = new javax.swing.JCheckBox();
        jCheckBoxAlternativaB = new javax.swing.JCheckBox();
        jCheckBoxAlternativaC = new javax.swing.JCheckBox();
        jCheckBoxAlternativaD = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldIdAval = new javax.swing.JTextField();
        jButtonAdicionarPergunta = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Perguntas");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("IndagaMente");

        jLabel9.setText("Enunciado com Alternativas(A-D):");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel10.setText("Alternativa Correta:");

        jCheckBoxAlternativaA.setText("Alternativa A");
        jCheckBoxAlternativaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAlternativaAActionPerformed(evt);
            }
        });

        jCheckBoxAlternativaB.setText("Alternativa B");
        jCheckBoxAlternativaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAlternativaBActionPerformed(evt);
            }
        });

        jCheckBoxAlternativaC.setText("Alternativa C");
        jCheckBoxAlternativaC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAlternativaCActionPerformed(evt);
            }
        });

        jCheckBoxAlternativaD.setText("Alternativa D");
        jCheckBoxAlternativaD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAlternativaDActionPerformed(evt);
            }
        });

        jLabel3.setText("ID da Prova:");

        jButtonAdicionarPergunta.setLabel("Adicionar Pergunta");
        jButtonAdicionarPergunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarPerguntaActionPerformed(evt);
            }
        });

        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(496, 496, 496))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(458, 458, 458)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(398, 398, 398)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldIdAval, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(jButtonAdicionarPergunta)))
                .addContainerGap(398, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(476, 476, 476))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(351, 351, 351)
                    .addComponent(jCheckBoxAlternativaA)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jCheckBoxAlternativaB)
                    .addGap(12, 12, 12)
                    .addComponent(jCheckBoxAlternativaC)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jCheckBoxAlternativaD)
                    .addContainerGap(352, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldIdAval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addGap(85, 85, 85)
                .addComponent(jButtonAdicionarPergunta)
                .addContainerGap(265, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(340, 340, 340)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBoxAlternativaA)
                        .addComponent(jCheckBoxAlternativaB)
                        .addComponent(jCheckBoxAlternativaC)
                        .addComponent(jCheckBoxAlternativaD))
                    .addContainerGap(340, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxAlternativaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAlternativaAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxAlternativaAActionPerformed

    private void jCheckBoxAlternativaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAlternativaBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxAlternativaBActionPerformed

    private void jCheckBoxAlternativaCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAlternativaCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxAlternativaCActionPerformed

    private void jCheckBoxAlternativaDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAlternativaDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxAlternativaDActionPerformed

    private void jButtonAdicionarPerguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarPerguntaActionPerformed
        // TODO add your handling code here:
        adicionarPergunta();
    }//GEN-LAST:event_jButtonAdicionarPerguntaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        // Abre a telaProfessor
        telaAvaliacaoProfessor telaAvaliacao = new telaAvaliacaoProfessor(professorLogado);
        telaAvaliacao.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        Usuario professorFake = new Usuario(1, "joaovitor", "Joao", "Vitor", "senha123", "Professor");
        java.awt.EventQueue.invokeLater(() -> new telaPerguntas(professorFake).setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAdicionarPergunta;
    private javax.swing.JCheckBox jCheckBoxAlternativaA;
    private javax.swing.JCheckBox jCheckBoxAlternativaB;
    private javax.swing.JCheckBox jCheckBoxAlternativaC;
    private javax.swing.JCheckBox jCheckBoxAlternativaD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldIdAval;
    // End of variables declaration//GEN-END:variables

   

    private void salvarRespostaCorreta(int idAval, String alternativaCorreta) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private boolean existeIdAval(int idAval, Connection conn) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
