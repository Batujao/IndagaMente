/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;
import com.mycompany.indagamente.Avaliacao;
import com.mycompany.indagamente.Usuario;
import javax.swing.*;
import java.awt.event.*;
import java.util.List;
import com.mycompany.indagamente.avaliacaoAluno;

public class telaResponderAvaliacao extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(telaResponderAvaliacao.class.getName());

    private final List<String> enunciados;
    private List<String> alternativasCorretas;
    private int indiceAtual = 0;
    private int acertos = 0;
    private int idAluno;
    private int idAval;

    public telaResponderAvaliacao(int idAluno, int idAval) {
        initComponents();
        this.idAluno = idAluno;
        this.idAval = idAval;

        enunciados = Avaliacao.carregarEnunciados(idAval);
        alternativasCorretas = Avaliacao.carregarAlternativasCorretas(idAval);

        if (enunciados.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhuma pergunta encontrada para essa avaliação.");
            dispose();
        } else {
            carregarPergunta();
        }

        jButtonEnviarResposta.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                enviarResposta();
            }
        });
        jTextAreaEnunciado.setEditable(false);  // deixa o JTextArea somente leitura
        jTextAreaEnunciado.setBackground(null); // opcional, para ficar com fundo igual ao do painel (mais "label-like")
        jTextAreaEnunciado.setBorder(null);
    }

    private void carregarPergunta() {
        if (indiceAtual < enunciados.size()) {
            jTextAreaEnunciado.setText(enunciados.get(indiceAtual));
            buttonGroupAlternativas.clearSelection();
            // Como você só tem "Alternativa A", "B", "C", "D" sem texto específico,
            // você pode deixar assim ou adaptar pra mostrar alternativas do banco se quiser.
            jRadioButtonA.setText("Alternativa A");
            jRadioButtonB.setText("Alternativa B");
            jRadioButtonC.setText("Alternativa C");
            jRadioButtonD.setText("Alternativa D");

            if (indiceAtual == enunciados.size() - 1) {
                jButtonEnviarResposta.setText("Finalizar Prova");
            } else {
                jButtonEnviarResposta.setText("Enviar Resposta");
            }
        }
    }

    private void enviarResposta() {
        String respostaSelecionada = null;

        if (jRadioButtonA.isSelected()) {
            respostaSelecionada = "A";
        } else if (jRadioButtonB.isSelected()) {
            respostaSelecionada = "B";
        } else if (jRadioButtonC.isSelected()) {
            respostaSelecionada = "C";
        } else if (jRadioButtonD.isSelected()) {
            respostaSelecionada = "D";
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecione uma alternativa.");
            return;
        }

        // Verifica se a resposta está correta
        String alternativaCorreta = alternativasCorretas.get(indiceAtual);
        if (respostaSelecionada.equalsIgnoreCase(alternativaCorreta)) {
            acertos++;
        }

        indiceAtual++;

        if (indiceAtual >= enunciados.size()) {
    // Mostrar resultado final
    JOptionPane.showMessageDialog(this, "Prova finalizada! Acertos: " + acertos + "/" + enunciados.size());

    // Calcular nota
    float notaFinal = (float) acertos / enunciados.size() * 10;
    boolean status;
    // Verificar status: passou (nota >= 6)?
    if(notaFinal >= 6){
    status = true;
    }else{
    status = false;
    }

    // Criar o objeto resultado
    avaliacaoAluno resultado = new avaliacaoAluno(
        idAluno,
        idAval,
        notaFinal,
        acertos,
        status,
        java.time.LocalDateTime.now()
    );

    // Salvar no banco
    avaliacaoAluno.salvarResultado(resultado);

    this.dispose();

Usuario usuarioAluno = Usuario.buscarPorId(idAluno); // seu método para buscar usuario
new telaAluno(usuarioAluno).setVisible(true);
} else {
    carregarPergunta();
}
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupAlternativas = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaEnunciado = new javax.swing.JTextArea();
        jRadioButtonB = new javax.swing.JRadioButton();
        jRadioButtonA = new javax.swing.JRadioButton();
        jRadioButtonC = new javax.swing.JRadioButton();
        jRadioButtonD = new javax.swing.JRadioButton();
        jButtonEnviarResposta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("IndagaMente");

        jTextAreaEnunciado.setColumns(20);
        jTextAreaEnunciado.setRows(5);
        jScrollPane1.setViewportView(jTextAreaEnunciado);

        buttonGroupAlternativas.add(jRadioButtonB);
        jRadioButtonB.setText("Alternativa B");

        buttonGroupAlternativas.add(jRadioButtonA);
        jRadioButtonA.setText("Alternativa A");

        buttonGroupAlternativas.add(jRadioButtonC);
        jRadioButtonC.setText("Alternativa C");

        buttonGroupAlternativas.add(jRadioButtonD);
        jRadioButtonD.setText("Alternativa D");

        jButtonEnviarResposta.setText("Enviar Resposta");
        jButtonEnviarResposta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarRespostaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(jRadioButtonA)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButtonB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonD)))
                .addContainerGap(330, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(467, 467, 467))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonEnviarResposta, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(470, 470, 470))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonB)
                    .addComponent(jRadioButtonC)
                    .addComponent(jRadioButtonD)
                    .addComponent(jRadioButtonA))
                .addGap(43, 43, 43)
                .addComponent(jButtonEnviarResposta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(243, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEnviarRespostaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarRespostaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEnviarRespostaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        java.awt.EventQueue.invokeLater(() -> new telaResponderAvaliacao(12,12).setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupAlternativas;
    private javax.swing.JButton jButtonEnviarResposta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButtonA;
    private javax.swing.JRadioButton jRadioButtonB;
    private javax.swing.JRadioButton jRadioButtonC;
    private javax.swing.JRadioButton jRadioButtonD;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaEnunciado;
    // End of variables declaration//GEN-END:variables
}
